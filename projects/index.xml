<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Dev&#39;s den</title>
    <link>http://localhost:1313/projects/</link>
    <description>Recent content in Projects on Dev&#39;s den</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 30 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/projects/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GateForge Python RTL hardware design framework and RISC-V CPU</title>
      <link>http://localhost:1313/projects/gateforge/</link>
      <pubDate>Sun, 30 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/gateforge/</guid>
      <description>&lt;a href=&#34;https://github.com/vagran/GateForge&#34;&gt;&#xA;&lt;span class=&#34;fa-stack fa-lg&#34;&gt;&#xA;    &lt;i class=&#34;fa fa-circle fa-stack-2x&#34;&gt;&lt;/i&gt;&#xA;    &lt;i class=&#34;fab fa-github fa-stack-1x fa-inverse&#34;&gt;&lt;/i&gt;&#xA;&lt;/span&gt;&#xA;GitHub repo &lt;i&gt;vagran/GateForge&lt;/i&gt;&#xA;&lt;/a&gt;&#xA;&lt;p&gt;So, I tried using an open-source toolchain for my next FPGA project. The first feature I checked in&#xA;Yosys was SystemVerilog interfaces, but unfortunately, they were not supported. This presents a&#xA;significant limitation in structuring a complex project effectively. Obviously, we need a framework&#xA;to address this. MyHDL, Magma, and Chisel all sound promising, but who says I can&amp;rsquo;t create my own?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Blender-like panels and tabs layout</title>
      <link>http://localhost:1313/projects/panels-layout/</link>
      <pubDate>Sun, 08 Jan 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/panels-layout/</guid>
      <description>&lt;p&gt;Panels and tabs layout for Vue framework (specifically it is written for Vue 3). The behavior is&#xA;mostly inspired (but not fully equal to) by similar functionality in Blender 3D editor.&lt;/p&gt;&#xA;&lt;a href=&#34;https://github.com/vagran/panels-layout&#34;&gt;&#xA;&lt;span class=&#34;fa-stack fa-lg&#34;&gt;&#xA;    &lt;i class=&#34;fa fa-circle fa-stack-2x&#34;&gt;&lt;/i&gt;&#xA;    &lt;i class=&#34;fab fa-github fa-stack-1x fa-inverse&#34;&gt;&lt;/i&gt;&#xA;&lt;/span&gt;&#xA;GitHub repo &lt;i&gt;vagran/panels-layout&lt;/i&gt;&#xA;&lt;/a&gt;&#xA;&lt;p&gt;Play with it &lt;a href=&#34;https://vagran.github.io/panels-layout-demo/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ADK C&#43;&#43; Gradle plugin</title>
      <link>http://localhost:1313/projects/adk-cpp-gradle-plugin/</link>
      <pubDate>Fri, 17 Dec 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/adk-cpp-gradle-plugin/</guid>
      <description>&lt;p&gt;When I wanted to use brand new C++20 modules in my next project I found that currently (2021 Q3)&#xA;there is still no any support in major build systems typically used for C++ projects. So the&#xA;obvious solution is to create one. This Gradle plugin satisfied all my needs for such a system and&#xA;made me happy. More details in the repository.&lt;/p&gt;&#xA;&lt;a href=&#34;https://github.com/vagran/adk-cpp-gradle-plugin&#34;&gt;&#xA;&lt;span class=&#34;fa-stack fa-lg&#34;&gt;&#xA;    &lt;i class=&#34;fa fa-circle fa-stack-2x&#34;&gt;&lt;/i&gt;&#xA;    &lt;i class=&#34;fab fa-github fa-stack-1x fa-inverse&#34;&gt;&lt;/i&gt;&#xA;&lt;/span&gt;&#xA;GitHub repo &lt;i&gt;vagran/adk-cpp-gradle-plugin&lt;/i&gt;&#xA;&lt;/a&gt;</description>
    </item>
    <item>
      <title>DXF viewer</title>
      <link>http://localhost:1313/projects/dxf-viewer/</link>
      <pubDate>Fri, 17 Dec 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/dxf-viewer/</guid>
      <description>&lt;p&gt;High-performant DXF files viewer which works just in your browser. It is written in&#xA;JavaScript and uses WebGL for rendering. More details in the repository.&lt;/p&gt;&#xA;&lt;a href=&#34;https://github.com/vagran/dxf-viewer&#34;&gt;&#xA;&lt;span class=&#34;fa-stack fa-lg&#34;&gt;&#xA;    &lt;i class=&#34;fa fa-circle fa-stack-2x&#34;&gt;&lt;/i&gt;&#xA;    &lt;i class=&#34;fab fa-github fa-stack-1x fa-inverse&#34;&gt;&lt;/i&gt;&#xA;&lt;/span&gt;&#xA;GitHub repo &lt;i&gt;vagran/dxf-viewer&lt;/i&gt;&#xA;&lt;/a&gt;&#xA;&lt;p&gt;Play with it &lt;a href=&#34;https://vagran.github.io/dxf-viewer-example/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tiny home hydroponics</title>
      <link>http://localhost:1313/projects/hydroponics-v1/</link>
      <pubDate>Fri, 17 Dec 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/hydroponics-v1/</guid>
      <description>&lt;p&gt;This funny project was started both for having fun with some &amp;ldquo;biotech&amp;rdquo; and with relatively new for&#xA;those times C++11 standard, especially regarding its usage possibility in MCUs. This ended with&#xA;fully automated home hydroponics system.  There is &lt;a href=&#34;https://habr.com/ru/post/385135/&#34;&gt;an article&lt;/a&gt;&#xA;(in Russian) about this project.&lt;/p&gt;&#xA;&lt;p&gt;I have a dream about version 2. This time it should have a bit larger scale and more serious&#xA;approach to &amp;ldquo;biotech&amp;rdquo; part (tomatoes from version 1 had terrible taste). But still no time to&#xA;implement all new ideas.&lt;/p&gt;&#xA;&lt;a href=&#34;https://github.com/vagran/hydroponics&#34;&gt;&#xA;&lt;span class=&#34;fa-stack fa-lg&#34;&gt;&#xA;    &lt;i class=&#34;fa fa-circle fa-stack-2x&#34;&gt;&lt;/i&gt;&#xA;    &lt;i class=&#34;fab fa-github fa-stack-1x fa-inverse&#34;&gt;&lt;/i&gt;&#xA;&lt;/span&gt;&#xA;GitHub repo &lt;i&gt;vagran/hydroponics&lt;/i&gt;&#xA;&lt;/a&gt;</description>
    </item>
  </channel>
</rss>
